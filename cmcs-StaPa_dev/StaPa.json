{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "allowedValues": [
                "westeurope",
                "germanywestcentral"
            ]
        },
        "tags": {
            "type": "object"
        },
        "customername": {
            "type": "string"
        },
        //
        //start vnet-params 
        "vnetRgName": {
            "type": "string",
            "defaultValue": "cmcs-vnet-rg"
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "cmcs-vnet"
        },
        "NSGName": {
            "type": "string",
            "defaultValue": "cmcs-nsg"
        },
        "SubnetLANName": {
            "type": "string",
            "defaultValue": "cmcs-lan-subnet"
        },
        "SubnetWANName": {
            "type": "string",
            "defaultValue": "cmcs-wan-subnet"
        },
        "vnetAddressPrefix": {
            "type": "string"
        },
        "LanAddressPrefix": {
            "type": "string"
        },
        "WanAddressPrefix": {
            "type": "string"
        },
        "DmzAddressPrefix": {
            "type": "string"
        },
        "SubnetDMZName": {
            "type": "string",
            "defaultValue": "cmcs-dmz-subnet"
        },
        //end vnet-params
        //

        //
        //start backup-params
        "backupRgName": {
            "type": "string",
            "defaultValue": "cmcs-backup-rg"
        },
        "vaultName": {
            "type": "string",
            "defaultValue": "cmcs-backup"
        },
        "enableCRR": {
          "type": "bool",
          "defaultValue": false
        },
        "vaultStorageType": {
          "type": "string",
          "defaultValue": "LocallyRedundant",
          "allowedValues": [
            "LocallyRedundant",
            "GeoRedundant"
          ]
        },
        "PolicyName_daily_filestore": {
            "type": "string",
            "defaultValue": "cmcs-daily-backup-Filestore"
        },
        "PolicyRetentionDays_filestore": {
            "type": "int",
            "defaultValue": 60
        },
        "PolicyName_daily_profiles": {
            "type": "string",
            "defaultValue": "cmcs-daily-backup-Profiles"
        },
        "PolicyRetentionDays_profiles": {
            "type": "int",
            "defaultValue": 30
        },
        "PolicyName_daily_vm": {
            "type": "string",
            "defaultValue": "cmcs-daily-backup-VM"
        },
        "PolicyRetentionDays_vm": {
            "type": "int",
            "defaultValue": 30
        },
        "PolicyName_daily_wvd": {
            "type": "string",
            "defaultValue": "cmcs-daily-backup-WVD"
        },
        "PolicyRetentionDays_wvd": {
            "type": "int",
            "defaultValue": 7
        },
        "ScheduleTime": {
            "type": "string",
            "defaultValue": "22:00"
        },
        "ScheduleTimeZone": {
            "type": "string",
            "defaultValue": "W. Europe Standard Time"
        },
        //end backup-params
        //

        //
        //start update and security params
        "SecurityRgName": {
            "type": "string",
            "defaultValue": "cmcs-security-rg"
        },
        "UpdateRgName": {
            "type": "string",
            "defaultValue": "cmcs-update-rg"
        },
        "workspaceName": {
            "type": "string",
            "defaultValue": "cmcs-loganalytics"
        },
        "updateAutomationAccountName": {
            "type": "string",
            "defaultValue": "cmcs-update-automation"
        },
        "updateScheduleName": {
            "type": "string",
            "defaultValue": "Weekly"
        },
        "updateScheduleStartTime": {
            "type": "string",
            "defaultValue": "22:00:00"
        },
        "udpateScheduleInterval": {
            "type": "int",
            "defaultValue": 1
        },
        "udpateScheduleFrequency": {
            "type": "string",
            "defaultValue": "Week"
        },
        "updateScheduleTimeZone": {
            "type": "string",
            "defaultValue": "Europe/Berlin"
        },
        "updateIncludedClassifications": {
            "type": "string",
            "defaultValue": "Critical, Security, Definition"
        },
        "updateRebootSetting": {
            "type": "string",
            "defaultValue": "IfRequired"
        },
        "updateDuration": {
            "type": "string",
            "defaultValue": "PT2H"
        },
        "updateScheduleWeekDays": {
            "type": "array",
            "defaultValue": [
                "Thursday"
            ]
        },
        //end update and security params
        //

        //
        //start optional rgs
        "DeployJumpHostRG": {
            "type": "bool",
            "defaultValue": true
        },
        "JumpHostRgName": {
            "type": "string",
            "defaultValue": "cmcs-jumphost-rg"
        },
        "jumphostName": {
            "type": "string",
            "defaultValue": "cmcs-jumphost"
        },
        "JumpHostAdminUsername": {
            "type": "string",
            "defaultValue": "ITSAdmin"
        },
        "JumpHostAdminPassword": {
            "type": "securestring"
        },        
        "JumpHostDeployPublicIp": {
            "type": "bool",
            "defaultValue": true
        },
        "JumpHostPublicIpDnsName": {
            "type": "string",
            "defaultValue": "[parameters('customername')]"
        },
        "JumpHostVmSize": {
            "type": "string",
            "defaultValue": "Standard_B2S"
        },
        "JumpHostImageSku": {
            "type": "string",
            "defaultValue": "20h2-pro-g2"
        },
        "JumpHostRDPRemoteIPs": {
            "type": "array",
            "defaultValue": [
                "109.235.228.186",
                "20.86.98.183"
            ]
        },
        //end optional rgs
        //
        //
        //start optional rgs        
        "firewallRgName": {
            "type": "string",
            "defaultValue": "cmcs-firewall-rg"
        },
        "DeployFirewallRG": {
            "type": "bool",
            "defaultValue": true
        },
        "dcRgName": {
            "type": "string",
            "defaultValue": "cmcs-dc01-rg"
        },
        "DeployDCRG": {
            "type": "bool",
            "defaultValue": true
        },       
        //end optional rgs
        //
        //
        //start avd-params
        "ProfilesRgName": {
            "type": "string",
            "defaultValue": "cmcs-profiles-rg"
        },
        "DeployProfilesRG": {
            "type": "bool",
            "defaultValue": true
        },
        "DeployAVDMetadata": {
            "type": "array",
            "defaultValue": [
                "Office",
                "CAD",
                "Imaging"
            ]
        },
        "avdlocation": {
            "type": "string",
            "defaultValue": "westeurope"
        },
        "ProfileStorageAccountName": {
            "type": "string",
            "maxLength": 15,
            "defaultValue": "[concat('profiles',substring(uniqueString(subscription().subscriptionId),0,6))]"
        },
        "ProfileFileShareName": {
            "type": "string",
            "minLength": 3,
            "maxLength": 63,
            "defaultValue": "cmcsprofiles"
        },
        "ProfileQuota": {
            "type": "int",
            "defaultValue": 100 ,
            "minValue": 100
        }
        //end avd-params
        //
        

    },
    "variables": {

    },
    "resources": [
        //
        //start essential resource groups
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[parameters('SecurityRgName')]",
            "location": "[parameters('Location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[parameters('UpdateRgName')]",
            "location": "[parameters('Location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[parameters('vnetRgName')]",
            "location": "[parameters('Location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[parameters('backupRgName')]",
            "location": "[parameters('Location')]",
            "properties": {}
        },
        
        //end essential resource groups
        //        
        //
        //start optional resource groups
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[parameters('JumpHostRgName')]",
            "location": "[parameters('Location')]",
            "condition": "[parameters('DeployJumpHostRG')]",
            "properties": {}
        },
        {
            "copy": {
                "name": "AVDRGs",
                "count": "[length(parameters('DeployAVDMetadata'))]"
            },
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[concat('cmcs-',parameters('DeployAVDMetadata')[copyIndex()],'01-rg')]",
            "location": "[parameters('Location')]",
            "condition": "[greaterOrEquals(length(parameters('DeployAVDMetadata')),1)]",
            "properties": {}
        },        
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[parameters('firewallRgName')]",
            "location": "[parameters('Location')]",
            "condition": "[parameters('DeployFirewallRG')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[parameters('dcRgName')]",
            "location": "[parameters('Location')]",
            "condition": "[parameters('DeployDCRG')]",
            "properties": {}
        },
        
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[parameters('ProfilesRgName')]",
            "location": "[parameters('Location')]",
            "condition": "[parameters('DeployProfilesRG')]",
            "properties": {}
        },
        //end optional resource groups
        //
        {
            "type": "Microsoft.Security/workspaceSettings",
            "apiVersion": "2017-08-01-preview",
            "name": "default",
            "dependsOn": [
                "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('securityRgName'),'/providers/Microsoft.Resources/deployments/createloganalytics')]"
            ],
            "properties": {
                "scope": "[subscription().id]",
                "workspaceId": "[concat(subscription().id,'/resourceGroups/',parameters('SecurityRgName'),'/providers/microsoft.operationalinsights/workspaces/',parameters('workspaceName'))]"
            }
        },
        {
            "type": "Microsoft.Security/autoProvisioningSettings",
            "dependsOn": [
                "[resourceId('Microsoft.Security/workspaceSettings', 'default')]"
            ],
            "apiVersion": "2017-08-01-preview",
            "name": "default",
            "properties": {
                "autoProvision": "On"
            }
        },
        {
            "type": "Microsoft.Authorization/policyassignments",
            "apiVersion": "2020-09-01",
            "name": "[concat('ASC Default - ',subscription().displayName)]",
            "location": "[parameters('location')]",
            "properties": {
                "displayName": "CMCS Security Center",
                "enforcementMode": "Default",
                "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "createautomationaccount",
            "resourceGroup": "[parameters('UpdateRgName')]",
            "dependsOn": [
                "[parameters('UpdateRgName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "parameters": {
                    "updateAutomationAccountName": { "value": "[parameters('updateAutomationAccountName')]" },
                    "location": { "value": "[parameters('location')]" },
                    "tags": { "value": "[parameters('tags')]" },
                    "updateScheduleName": { "value": "[parameters('updateScheduleName')]" },
                    "updateScheduleStartTime": { "value": "[parameters('updateScheduleStartTime')]" },
                    "udpateScheduleInterval": { "value": "[parameters('udpateScheduleInterval')]" },
                    "udpateScheduleFrequency": { "value": "[parameters('udpateScheduleFrequency')]" },
                    "updateScheduleTimeZone": { "value": "[parameters('updateScheduleTimeZone')]" },
                    "updateIncludedClassifications": { "value": "[parameters('updateIncludedClassifications')]" },
                    "updateRebootSetting": { "value": "[parameters('updateRebootSetting')]" },
                    "updateDuration": { "value": "[parameters('updateDuration')]" },
                    "updateScheduleWeekDays": { "value": "[parameters('updateScheduleWeekDays')]" }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "updateAutomationAccountName": { "type": "String" },
                        "location": { "type": "string" },
                        "tags": { "type": "object" },
                        "updateScheduleName": { "type": "string" },
                        "updateScheduleStartTime": { "type": "string" },
                        "udpateScheduleInterval": { "type": "int" },
                        "udpateScheduleFrequency": { "type": "string" },
                        "updateScheduleTimeZone": { "type": "string" },
                        "updateIncludedClassifications": { "type": "string" },
                        "updateRebootSetting": { "type": "string" },
                        "updateDuration": { "type": "string" },
                        "updateScheduleWeekDays": { "type": "array" }

                    },
                    "variables": {
                        "location": "[parameters('location')]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Automation/automationAccounts",
                            "apiVersion": "2020-01-13-preview",
                            "name": "[parameters('updateAutomationAccountName')]",
                            "location": "[variables('location')]",
                            "tags": "[parameters('tags')]",
                            "properties": {
                                "sku": {
                                    "name": "Basic"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Automation/automationAccounts/softwareUpdateConfigurations",
                            "apiVersion": "2019-06-01",
                            "name": "[concat(parameters('updateAutomationAccountName'), '/', parameters('updateScheduleName'))]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Automation/automationAccounts', parameters('updateAutomationAccountName'))]"
                            ],
                            "properties": {
                                "updateConfiguration": {
                                    "operatingSystem": "Windows",
                                    "windows": {
                                        "includedUpdateClassifications": "[parameters('updateIncludedClassifications')]",
                                        "rebootSetting": "[parameters('updateRebootSetting')]"
                                    },
                                    "targets": {
                                        "azureQueries": [
                                            {
                                                "scope": [
                                                    "[subscription().id]"
                                                ],
                                                "tagSettings": {
                                                    "tags": {},
                                                    "filterOperator": "Any"
                                                }
                                            }
                                        ]
                                    },
                                    "duration": "[parameters('updateDuration')]"
                                },
                                "tasks": {},
                                "scheduleInfo": {
                                    "startTime": "[parameters('updateScheduleStartTime')]",
                                    "expiryTime": "8999-12-31T23:59:59Z",
                                    "interval": "[parameters('udpateScheduleInterval')]",
                                    "frequency": "[parameters('udpateScheduleFrequency')]",
                                    "timeZone": "[parameters('updateScheduleTimeZone')]",
                                    "advancedSchedule": {
                                        "weekDays": "[parameters('updateScheduleWeekDays')]"
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "createloganalytics",
            "resourceGroup": "[parameters('SecurityRgName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', parameters('UpdateRgName'))]",
                "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('UpdateRgName'),'/providers/Microsoft.Resources/deployments/createautomationaccount')]"
            ],
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "parameters": {
                    "location": { "value": "[parameters('location')]" },
                    "tags": { "value": "[parameters('tags')]" },
                    "workspaceName": { "value": "[parameters('workspaceName')]" },
                    "updateAutomationAccountRgName": { "value": "[parameters('updateRgName')]" },
                    "updateAutomationAccountName": { "value": "[parameters('updateAutomationAccountName')]" },
                    "ComputerGroupName": { "value": "[reference(concat(subscription().id,'/resourcegroups/',parameters('securityRGName'),'/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspaceName'),'/savedSearches/updates|microsoftdefaultcomputergroup'),'2020-08-01','Full' ).properties.displayname]"  }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "location": { "type": "string" },
                        "tags": { "type": "object" },
                        "workspaceName": { "type": "string" },
                        "updateAutomationAccountRgName": { "type": "string" },
                        "updateAutomationAccountName": { "type": "string" },
                        "ComputerGroupName": { "type": "string" }
                        

                    },
                    "variables": {
                        "location": "[parameters('location')]",
                        "DeployComputerGroup": "[if(equals('MicrosoftDefaultComputerGroup',parameters('ComputerGroupName')),false(),true())]"
                    },
                    "resources": [
                        {
                            "type": "microsoft.operationalinsights/workspaces",
                            "apiVersion": "2020-10-01",
                            "name": "[parameters('workspaceName')]",
                            "location": "[variables('location')]",
                            "tags": "[parameters('tags')]",
                            "properties": {
                                "sku": {
                                    "name": "PerGB2018"
                                }
                            }
                        },
                        {
                            "type": "microsoft.operationalinsights/workspaces/linkedservices",
                            "apiVersion": "2020-08-01",
                            "name": "[concat(parameters('workspaceName'), '/Automation')]",
                            "dependsOn": [
                                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaceName'))]"
                            ],
                            "properties": {
                                "resourceId": "[resourceId(parameters('updateAutomationAccountRgName'), 'Microsoft.Automation/automationAccounts', parameters('updateAutomationAccountName'))]"
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
                            "apiVersion": "2020-08-01",
                            "name": "[concat(parameters('workspaceName'), '/updates|microsoftdefaultcomputergroup')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
                            ],
                            "condition": "[variables('DeployComputerGroup')]",
                            "properties": {
                                "category": "Updates",
                                "displayName": "MicrosoftDefaultComputerGroup",
                                "query": "Heartbeat | where Computer in~ (\"\") or VMUUID in~ (\"\") | distinct Computer",
                                "tags": [
                                    {
                                        "name": "Group",
                                        "value": "Computer"
                                    }
                                ],
                                "functionAlias": "Updates__MicrosoftDefaultComputerGroup",
                                "version": 2
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/configurationScopes",
                            "apiVersion": "2015-11-01-preview",
                            "name": "[concat(parameters('workspaceName'), '/MicrosoftDefaultScopeConfig-Updates')]",
                            "location": "[variables('location')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
                            ],
                            "kind": "SearchComputerGroup",
                            "properties": {
                                "Include": [
                                    "Updates__MicrosoftDefaultComputerGroup"
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationsManagement/solutions",
                            "apiVersion": "2015-11-01-preview",
                            "name": "[concat('SecurityCenterFree(', parameters('workspaceName'), ')')]",
                            "location": "[variables('location')]",
                            "dependsOn": [
                                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaceName'))]"
                            ],
                            "tags": "[parameters('tags')]",
                            "plan": {
                                "name": "[concat('SecurityCenterFree(', parameters('workspaceName'), ')')]",
                                "product": "OMSGallery/SecurityCenterFree",
                                "promotionCode": "",
                                "publisher": "Microsoft"
                            },
                            "properties": {
                                "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaceName'))]"
                            }
                        },
                        {
                            "type": "Microsoft.OperationsManagement/solutions",
                            "apiVersion": "2015-11-01-preview",
                            "name": "[concat('Updates(', parameters('workspaceName'), ')')]",
                            "location": "[variables('location')]",
                            "dependsOn": [
                                "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaceName'))]"
                            ],
                            "tags": "[parameters('tags')]",
                            "plan": {
                                "name": "[concat('Updates(', parameters('workspaceName'), ')')]",
                                "product": "OMSGallery/Updates",
                                "promotionCode": "",
                                "publisher": "Microsoft"
                            },
                            "properties": {
                                "workspaceResourceId": "[resourceId('microsoft.operationalinsights/workspaces', parameters('workspaceName'))]",
                                "configurations": [
                                    {
                                        "Name": "SolutionTargeting",
                                        "Value": "MicrosoftDefaultScopeConfig-Updates"
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "vnetDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "resourceGroup": "[parameters('vnetRgName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', parameters('vnetRgName'))]"
            ],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "nsgName": {
                        "value": "[parameters('NSGName')]"
                    },
                    "SubnetDmzName": {
                        "value": "[parameters('SubnetDMZName')]"
                    },
                    "SubnetLanName": {
                        "value": "[parameters('SubnetLANName')]"
                    },
                    "SubnetWanName": {
                        "value": "[parameters('SubnetWANName')]"
                    },
                    "vnetAddressPrefix": {
                        "value": "[parameters('vnetAddressPrefix')]"
                    },
                    "LanAddressPrefix": {
                        "value": "[parameters('LanAddressPrefix')]"
                    },
                    "WanAddressPrefix": {
                        "value": "[parameters('WanAddressPrefix')]"
                    },
                    "DmzAddressPrefix": {
                        "value": "[parameters('DmzAddressPrefix')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }                                        
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "vnetName": {
                            "type": "String"
                        },
                        "nsgName": {
                            "type": "String"
                        },
                        "location": {
                            "type": "String"
                        },
                        "tags": {
                            "type": "object"
                        },
                        "SubnetLanName": {
                            "type": "string"                                
                        },
                        "SubnetWanName": {
                            "type": "string"       
                        },
                        "SubnetDmzName": {
                            "type": "string"        
                        },
                        "vnetAddressPrefix": {
                            "type": "string"
                        },
                        "LanAddressPrefix": {
                            "type": "string"
                        },
                        "WanAddressPrefix": {
                            "type": "string"
                        },
                        "DmzAddressPrefix": {
                            "type": "string"
                        }
                    },
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Network/networkSecurityGroups",
                            "apiVersion": "2020-11-01",
                            "name": "[parameters('nsgName')]",
                            "location": "[parameters('location')]",
                            "tags": "[parameters('tags')]",
                            "properties": {
                                "securityRules": []
                            }
                        },
                        {
                            "type": "Microsoft.Network/virtualNetworks",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                            ],
                            "apiVersion": "2020-11-01",
                            "name": "[parameters('vnetName')]",
                            "location": "[parameters('location')]",
                            "tags": "[parameters('tags')]",
                            "properties": {
                                "addressSpace": {
                                    "addressPrefixes": [
                                        "[parameters('vnetAddressPrefix')]"
                                    ]
                                },
                                "dhcpOptions": {
                                    "dnsServers": []
                                },
                                "subnets": [
                                    {
                                        "name": "[parameters('SubnetLanName')]",
                                        "properties": {
                                            "addressPrefix": "[parameters('LanAddressPrefix')]",
                                            "serviceEndpoints": [
                                                {
                                                    "service": "Microsoft.Storage"
                                                }
                                            ],
                                            "delegations": [],
                                            "privateEndpointNetworkPolicies": "Enabled",
                                            "privateLinkServiceNetworkPolicies": "Enabled",
                                            "networkSecurityGroup": {
                                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                                            }
                                        }
                                    },
                                    {
                                        "name": "[parameters('SubnetWanName')]",
                                        "properties": {
                                            "addressPrefix": "[parameters('WanAddressPrefix')]",
                                            "serviceEndpoints": [],
                                            "delegations": [],
                                            "privateEndpointNetworkPolicies": "Enabled",
                                            "privateLinkServiceNetworkPolicies": "Enabled"
                                        }
                                    },
                                    {
                                        "name": "[parameters('SubnetDmzName')]",
                                        "properties": {
                                            "addressPrefix": "[parameters('DmzAddressPrefix')]",
                                            "serviceEndpoints": [],
                                            "delegations": [],
                                            "privateEndpointNetworkPolicies": "Enabled",
                                            "privateLinkServiceNetworkPolicies": "Enabled"
                                        }
                                    }
                                ],
                                "virtualNetworkPeerings": [],
                                "enableDdosProtection": false
                            }
                        }
                    ],
                    "outputs": {}
                }
            }
        },
        {
            "name": "backupDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "resourceGroup": "[parameters('backupRgName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', parameters('backupRgName'))]"
            ],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "vaultName": {
                        "value": "[parameters('vaultName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "enableCRR": {
                        "value": "[parameters('enableCRR')]"
                    },
                    "vaultStorageType": {
                        "value": "[parameters('vaultStorageType')]"
                    },
                    "PolicyName_daily_filestore": {
                        "value": "[parameters('PolicyName_daily_filestore')]"
                    },
                    "PolicyName_daily_profiles": {
                        "value": "[parameters('PolicyName_daily_profiles')]"
                    },
                    "PolicyName_daily_vm": {
                        "value": "[parameters('PolicyName_daily_vm')]"
                    },
                    "PolicyName_daily_wvd": {
                        "value": "[parameters('PolicyName_daily_wvd')]"
                    },
                    "PolicyRetentionDays_filestore": {
                        "value": "[parameters('PolicyRetentionDays_filestore')]"
                    },
                    "PolicyRetentionDays_profiles": {
                        "value": "[parameters('PolicyRetentionDays_profiles')]"
                    },
                    "PolicyRetentionDays_vm": {
                        "value": "[parameters('PolicyRetentionDays_vm')]"
                    },
                    "PolicyRetentionDays_wvd": {
                        "value": "[parameters('PolicyRetentionDays_wvd')]"
                    },
                    "ScheduleTime": {
                        "value": "[parameters('ScheduleTime')]"
                    },
                    "ScheduleTimeZone": {
                        "value": "[parameters('ScheduleTimeZone')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "vaultName": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "tags": {
                            "type": "object"
                        },
                        "enableCRR": {
                            "type": "bool"
                        },
                        "vaultStorageType": {
                            "type": "string"
                        },
                        "PolicyName_daily_filestore": {
                            "type": "string"
                        },
                        "PolicyRetentionDays_filestore": {
                            "type": "int"
                        },
                        "PolicyName_daily_profiles": {
                            "type": "string"
                        },
                        "PolicyRetentionDays_profiles": {
                            "type": "int"
                        },
                        "PolicyName_daily_vm": {
                            "type": "string"
                        },
                        "PolicyRetentionDays_vm": {
                            "type": "int"
                        },
                        "PolicyName_daily_wvd": {
                            "type": "string"
                        },
                        "PolicyRetentionDays_wvd": {
                            "type": "int"
                        },
                        "ScheduleTime": {
                            "type": "string"
                        },
                        "ScheduleTimeZone": {
                            "type": "string"
                        }
                    },
                    "variables": {
                        "skuName": "RS0",
                        "skuTier": "Standard"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.RecoveryServices/vaults",
                            "apiVersion": "2020-02-02",
                            "name": "[parameters('vaultName')]",
                            "location": "[parameters('location')]",
                            "tags": "[parameters('tags')]",
                            "sku": {
                              "name": "[variables('skuName')]",
                              "tier": "[variables('skuTier')]"
                            },      
                            "properties": {}
                        },
                        {
                            "type": "Microsoft.RecoveryServices/vaults/backupstorageconfig",
                            "apiVersion": "2020-02-02",
                            "name": "[concat(parameters('vaultName'), '/vaultstorageconfig')]",
                            "dependsOn": [
                              "[resourceId('Microsoft.RecoveryServices/vaults/', parameters('vaultName'))]"
                            ],
                            "properties": {
                              "StorageModelType": "[parameters('vaultStorageType')]",
                              "CrossRegionRestoreFlag": "[parameters('enableCRR')]"
                            }
                        },
                        {
                            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
                            "apiVersion": "2021-04-01",
                            "name": "[concat(parameters('vaultName'), '/', parameters('PolicyName_daily_filestore'))]",
                            "dependsOn": [
                                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaultName'))]"
                            ],
                            "properties": {
                                "backupManagementType": "AzureStorage",
                                "workLoadType": "AzureFileShare",
                                "schedulePolicy": {
                                    "schedulePolicyType": "SimpleSchedulePolicy",
                                    "scheduleRunFrequency": "Daily",
                                    "scheduleRunTimes": [
                                        "[parameters('ScheduleTime')]"
                                    ]
                                },
                                "retentionPolicy": {
                                    "retentionPolicyType": "LongTermRetentionPolicy",
                                    "dailySchedule": {
                                        "retentionTimes": [
                                            "[parameters('ScheduleTime')]"
                                        ],
                                        "retentionDuration": {
                                            "count": "[parameters('PolicyRetentionDays_filestore')]",
                                            "durationType": "Days"
                                        }
                                    }
                                },
                                "timeZone": "[parameters('ScheduleTimeZone')]"
                            }
                        },
                        {
                            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
                            "apiVersion": "2021-04-01",
                            "name": "[concat(parameters('vaultName'), '/', parameters('PolicyName_daily_profiles'))]",
                            "dependsOn": [
                                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaultName'))]"
                            ],
                            "properties": {
                                "backupManagementType": "AzureStorage",
                                "workLoadType": "AzureFileShare",
                                "schedulePolicy": {
                                    "schedulePolicyType": "SimpleSchedulePolicy",
                                    "scheduleRunFrequency": "Daily",
                                    "scheduleRunTimes": [
                                        "[parameters('ScheduleTime')]"
                                    ]
                                },
                                "retentionPolicy": {
                                    "retentionPolicyType": "LongTermRetentionPolicy",
                                    "dailySchedule": {
                                        "retentionTimes": [
                                            "[parameters('ScheduleTime')]"
                                        ],
                                        "retentionDuration": {
                                            "count": "[parameters('PolicyRetentionDays_profiles')]",
                                            "durationType": "Days"
                                        }
                                    }
                                },
                                "timeZone": "[parameters('ScheduleTimeZone')]"
                            }
                        },
                        {
                            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
                            "apiVersion": "2021-04-01",
                            "name": "[concat(parameters('vaultName'), '/', parameters('PolicyName_daily_vm'))]",
                            "dependsOn": [
                                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaultName'))]"
                            ],
                            "properties": {
                                "backupManagementType": "AzureIaasVM",
                                "schedulePolicy": {
                                    "schedulePolicyType": "SimpleSchedulePolicy",
                                    "scheduleRunFrequency": "Daily",
                                    "scheduleRunTimes": [
                                        "[parameters('ScheduleTime')]"
                                    ]
                                },
                                "retentionPolicy": {
                                    "retentionPolicyType": "LongTermRetentionPolicy",
                                    "dailySchedule": {
                                        "retentionTimes": [
                                            "[parameters('ScheduleTime')]"
                                        ],
                                        "retentionDuration": {
                                            "count": "[parameters('PolicyRetentionDays_vm')]",
                                            "durationType": "Days"
                                        }
                                    }
                                },
                                "instantRPDetails": {
                                    "azureBackupRGNamePrefix": "[concat(parameters('vaultName'),'RestorePoints-')]",
                                    "azureBackupRGNameSuffix": "[concat('-',parameters('location'))]"
                                },
                                "instantRpRetentionRangeInDays": 2,
                                "timeZone": "[parameters('ScheduleTimeZone')]"
                            }
                        },
                        {
                            "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
                            "apiVersion": "2021-04-01",
                            "name": "[concat(parameters('vaultName'), '/', parameters('PolicyName_daily_wvd'))]",
                            "dependsOn": [
                                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaultName'))]"
                            ],
                            "properties": {
                                "backupManagementType": "AzureIaasVM",
                                "schedulePolicy": {
                                    "schedulePolicyType": "SimpleSchedulePolicy",
                                    "scheduleRunFrequency": "Daily",
                                    "scheduleRunTimes": [
                                        "[parameters('ScheduleTime')]"
                                    ]
                                },
                                "retentionPolicy": {
                                    "retentionPolicyType": "LongTermRetentionPolicy",
                                    "dailySchedule": {
                                        "retentionTimes": [
                                            "[parameters('ScheduleTime')]"
                                        ],
                                        "retentionDuration": {
                                            "count": "[parameters('PolicyRetentionDays_wvd')]",
                                            "durationType": "Days"
                                        }
                                    }
                                },
                                "instantRPDetails": {
                                    "azureBackupRGNamePrefix": "[concat(parameters('vaultName'),'RestorePoints-')]",
                                    "azureBackupRGNameSuffix": "[concat('-',parameters('location'))]"
                                },
                                "instantRpRetentionRangeInDays": 2,
                                "timeZone": "[parameters('ScheduleTimeZone')]"
                            }
                        }
                    ],
                    "outputs": {}
                }
            }
        },
        {
            "copy": {
                "name": "AVDMetaDataCopy",
                "count": "[length(parameters('DeployAVDMetadata'))]"
            },
            "name": "[concat('AVDMetadata-',parameters('DeployAVDMetadata')[copyIndex()])]",
            "resourceGroup": "[concat('cmcs-',parameters('DeployAVDMetadata')[copyIndex()],'01-rg')]",
            "dependsOn": [
                "AVDRGs"
            ],
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "hostPoolName": {
                        "value": "[concat(parameters('customername'),'-',parameters('DeployAVDMetadata')[copyIndex()],'-Hostpool')]"
                    },                    
                    "hostPoolMaxSessionLimit": {
                        "value": 99
                    },
                    "workspaceName": {
                        "value": "[concat(parameters('customername'),'-',parameters('DeployAVDMetadata')[copyIndex()],'-AppGroup')]"
                    },                    
                    "appGroupName": {
                        "value": "[concat(parameters('customername'),'-',parameters('DeployAVDMetadata')[copyIndex()],'-Workspace')]"
                    },                    
                    "AVDLocation": {
                        "value": "[parameters('avdLocation')]"
                    }
                    
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "hostPoolName": {
                        "type": "String"
                        },                        
                        "hostPoolMaxSessionLimit": {
                            "type": "int"
                        },
                        "workspaceName": {
                            "type": "String"
                        },                        
                        "appGroupName": {
                            "type": "String"
                        },                        
                        "AVDLocation": {
                            "type": "String"
                        }
                    },
                    "variables": {},
                    "resources": [

                        {
                            "type": "Microsoft.DesktopVirtualization/hostpools",
                            "apiVersion": "2021-03-09-preview",
                            "name": "[parameters('hostPoolName')]",
                            "location": "[parameters('avdLocation')]",
                            "properties": {
                                "hostPoolType": "Pooled",
                                "maxSessionLimit": "[parameters('hostPoolMaxSessionLimit')]",
                                "loadBalancerType": "BreadthFirst",
                                "validationEnvironment": false,
                                "preferredAppGroupType": "Desktop",
                                "startVMOnConnect": false
                            }
                        },
                        {
                            "type": "Microsoft.DesktopVirtualization/applicationgroups",
                            "apiVersion": "2021-03-09-preview",
                            "name": "[parameters('appGroupName')]",
                            "location": "[parameters('avdLocation')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.DesktopVirtualization/hostpools', parameters('hostPoolName'))]"
                            ],
                            "kind": "Desktop",
                            "properties": {
                                "hostPoolArmPath": "[resourceId('Microsoft.DesktopVirtualization/hostpools', parameters('hostPoolName'))]",
                                "applicationGroupType": "Desktop"
                            }
                        },
                        {
                            "type": "Microsoft.DesktopVirtualization/workspaces",
                            "apiVersion": "2021-03-09-preview",
                            "name": "[parameters('workspaceName')]",
                            "location": "[parameters('avdLocation')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.DesktopVirtualization/applicationgroups', parameters('appGroupName'))]"
                            ],
                            "properties": {
                                "applicationGroupReferences": [
                                    "[resourceId('Microsoft.DesktopVirtualization/applicationgroups', parameters('appGroupName'))]"
                                ]
                            }
                        }


                    ],
                    "outputs": {}
                }
            }
        },
        {
            "name": "ProfileStoreDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "condition": "[if(greaterOrEquals(length(parameters('DeployAVDMetadata')),1),true(),false())]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', parameters('ProfilesRgName'))]",
                "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('vnetRgName'),'/providers/Microsoft.Resources/deployments/vnetDeployment')]"
            ],
            "resourceGroup": "[parameters('ProfilesRgName')]",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "ProfileFileShareName": {
                        "value": "[parameters('ProfileFileShareName')]"
                    },
                    "ProfileStorageAccountName": {
                        "value": "[parameters('ProfileStorageAccountName')]"
                    },
                    "ProfileQuota": {
                        "value": "[parameters('ProfileQuota')]"
                    },
                    "subnetLANName": {
                        "value": "[parameters('SubnetLANName')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "vnetRGName": {
                        "value": "[parameters('vnetRgName')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "ProfileStorageAccountName": {
                            "type": "string"
                        },
                        "ProfileFileShareName": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        },
                        "vnetRGName": {
                            "type": "string"
                        },
                        "vnetName": {
                            "type": "string"
                        },
                        "subnetLANName": {
                            "type": "string"
                        },
                        "ProfileQuota": {
                            "type": "int"
                        }
                    },
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2021-06-01",
                            "name": "[parameters('ProfilestorageAccountName')]",
                            "location": "[parameters('location')]",
                            "kind": "FileStorage",
                            "sku": {
                                "name": "Premium_LRS"
                            },
                            "properties": {
                                "networkAcls": {
                                    "bypass": "AzureServices",
                                    "defaultAction": "Deny",
                                    "virtualNetworkRules": [
                                        {
                                            "id": "[concat(subscription().id,'/resourceGroups/',parameters('vnetrgname'),'/providers/Microsoft.Network/virtualNetworks/',parameters('vnetname'),'/subnets/',parameters('subnetlanname'))]"
                                        }
                                    ]


                                }
                            }
                        },
                        {
                            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
                            "apiVersion": "2021-06-01",
                            "name": "[concat(parameters('profilestorageAccountName'), '/default/', parameters('profilefileShareName'))]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts', parameters('profilestorageAccountName'))]"
                            ],
                            "properties": {
                                "shareQuota": "[parameters('profilequota')]"
                            }
                        }

                    ],
                    "outputs": {}
                }
            }
        },
        {
            "name": "ProfileStoreBackupDeploymnet",
            "type": "Microsoft.Resources/deployments",
            "condition": "[if(greaterOrEquals(length(parameters('DeployAVDMetadata')),1),true(),false())]",
            "dependsOn": [
                "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('backupRgName'),'/providers/Microsoft.Resources/deployments/backupDeployment')]",
                "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('ProfilesRgName'),'/providers/Microsoft.Resources/deployments/ProfileStoreDeployment')]"
            ],
            "apiVersion": "2021-04-01",
            "resourceGroup": "[parameters('backupRgName')]",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "PolicyName_daily_profiles": {
                        "value": "[parameters('PolicyName_daily_profiles')]"
                    },
                    "ProfileFileShareName": {
                        "value": "[parameters('ProfileFileShareName')]"
                    },
                    "ProfilesRGName": {
                        "value": "[parameters('ProfilesRgName')]"
                    },
                    "ProfileStorageAccountName": {
                        "value": "[parameters('ProfileStorageAccountName')]"
                    },
                    "registerStorageAccount": {
                        "value": true
                    },
                    "vaultName": {
                        "value": "[parameters('vaultName')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "ProfilesRGName": {
                            "type": "string"
                        },
                        "ProfileStorageAccountName": {
                            "type": "string"
                        },
                        "ProfileFileShareName": {
                            "type": "string"
                        },
                        "registerStorageAccount": {
                            "type": "bool"
                        },
                        "vaultName": {
                            "type": "string"
                        },
                        "PolicyName_daily_profiles": {
                            "type": "string"
                        }
                    },
                    "variables": {
                        "backupFabric": "Azure",
                        "backupManagementType": "AzureStorage"

                    },
                    "resources": [

                        {
                            "condition": "[parameters('registerStorageAccount')]",
                            "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers",
                            "apiVersion": "2020-02-02",
                            "name": "[concat(parameters('vaultName'), '/', variables('backupFabric'), '/storagecontainer;Storage;', parameters('ProfilesRGName'), ';', parameters('ProfileStorageAccountName'))]",
                            "properties": {
                                "backupManagementType": "[variables('backupManagementType')]",
                                "containerType": "StorageContainer",
                                "sourceResourceId": "[resourceId(parameters('ProfilesRGName'), 'Microsoft.Storage/storageAccounts', parameters('ProfileStorageAccountName'))]"
                            }
                        },
                        {
                            "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
                            "apiVersion": "2020-02-02",
                            "name": "[concat(parameters('vaultName'), '/', variables('backupFabric'), '/storagecontainer;Storage;', parameters('ProfilesRGName'), ';', parameters('ProfileStorageAccountName'), '/AzureFileShare;', parameters('ProfileFileShareName'))]",
                            "dependsOn": [
                                "[resourceId('Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers', parameters('vaultName'), variables('backupFabric'), concat('storagecontainer;Storage;', parameters('ProfilesRGName'), ';', parameters('ProfileStorageAccountName')))]"
                            ],
                            "properties": {
                                "protectedItemType": "AzureFileShareProtectedItem",
                                "sourceResourceId": "[resourceId(parameters('ProfilesRGName'), 'Microsoft.Storage/storageAccounts', parameters('ProfileStorageAccountName'))]",
                                "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('vaultName'), parameters('PolicyName_daily_profiles'))]",
                                "isInlineInquiry": true
                            }
                        }

                    ],
                    "outputs": {}
                }
            }
        },
        {
            "name": "JumpHostDeployment",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('JumpHostRgName')]",
            "condition": "[parameters('DeployJumpHostRG')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', parameters('JumpHostRgName'))]"
            ],
            "apiVersion": "2021-04-01",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "JumpHostAdminPassword": {
                        "value": "[parameters('JumpHostAdminPassword')]"
                    },
                    "JumpHostAdminUsername": {
                        "value": "[parameters('JumpHostAdminUsername')]"
                    },
                    "JumpHostDeployPublicIp": {
                        "value": "[parameters('JumpHostDeployPublicIp')]"
                    },
                    "JumpHostImageSku": {
                        "value": "[parameters('JumpHostImageSku')]"
                    },
                    "jumphostName": {
                        "value": "[parameters('jumphostName')]"
                    },
                    "JumpHostPublicIpDnsName": {
                        "value": "[parameters('JumpHostPublicIpDnsName')]"
                    },
                    "JumpHostRDPRemoteIPs": {
                        "value": "[parameters('JumpHostRDPRemoteIPs')]"
                    },
                    "JumpHostVmSize": {
                        "value": "[parameters('JumpHostVmSize')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "subnetLANName": {
                        "value": "[parameters('SubnetLANName')]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "vnetRGName": {
                        "value": "[parameters('vnetRgName')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "jumphostName": {
                            "type": "string"
                        },
                        "JumpHostAdminUsername": { "type": "string" },
                        "JumpHostAdminPassword": { "type": "securestring" },
                        "tags": { "type": "object" },
                        "JumpHostDeployPublicIp": { "type": "bool" },
                        "JumpHostPublicIpDnsName": { "type": "string" },                        
                        "location": { "type": "string" },
                        "vnetRGName": { "type": "string" },
                        "vnetName": { "type": "string" },
                        "subnetLANName": { "type": "string" },
                        "JumpHostVmSize": { "type": "string" },
                        "JumpHostImageSku": { "type": "string" },
                        "JumpHostRDPRemoteIPs": {
                            "type": "array"
                        }
                    },
                    "variables": {
                        "JumpHostPublicIpAllocationMethod": "Static",
                        "JumpHostStorageAccountType": "StandardSSD_LRS",
                        "JumpHostVmLicenseType": "Windows_Client",
                        "imagePublisher": "MicrosoftWindowsDesktop",
                        "imageOffer": "Windows-10",
                        "jumphost_pip_name": "[concat(parameters('jumphostName'),'-pip')]",
                        "jumphost_nsg_name": "[concat(parameters('jumphostName'),'-nsg')]",
                        "jumphost_nic_name": "[concat(parameters('jumphostName'),'-nic')]",
                        "subnetId": "[concat('/subscriptions/', subscription().subscriptionId , '/resourceGroups/' , parameters('vnetrgname'), '/providers/Microsoft.Network/virtualNetworks/', parameters('vnetname'), '/subnets/', parameters('subnetLANName'))]"
                    },
                    "resources": [
                        {
                            "name": "[variables('jumphost_nsg_name')]",
                            "type": "Microsoft.Network/networkSecurityGroups",
                            "apiVersion": "2020-11-01",
                            "tags": "[parameters('tags')]",
                            "location": "[parameters('location')]",
                            "properties": {
                                "securityRules": [
                                    {
                                        "name": "allow_rdp_itsure_inbound",
                                        "properties": {
                                            "description": "Allow RDP from IT sure Office Neu-Ulm and Azure",
                                            "protocol": "Tcp",
                                            "sourcePortRange": "*",
                                            "destinationPortRange": "3389",
                                            "sourceAddressPrefixes": "[parameters('JumpHostRDPRemoteIPs')]",                                            
                                            "destinationAddressPrefix": "*",
                                            "access": "Allow",
                                            "priority": 100,
                                            "direction": "Inbound"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                          "type": "Microsoft.Network/publicIPAddresses",
                          "apiVersion": "2020-11-01",
                          "condition": "[parameters('JumpHostdeployPublicIp')]",
                          "name": "[variables('jumphost_pip_name')]",
                          "location": "[parameters('location')]",
                          "tags": "[parameters('tags')]",
                          "sku": {
                            "name": "Basic",
                            "tier": "Regional"
                          },
                          "properties": {
                            "publicIPAddressVersion": "IPv4",
                            "publicIPAllocationMethod": "[variables('JumpHostpublicIpAllocationMethod')]",
                            "idleTimeoutInMinutes": 4,
                            "dnsSettings": {
                              "domainNameLabel": "[parameters('JumpHostPublicIpDnsName')]"
                            },
                            "ipTags": []
                          }
                        },
                        {
                          "type": "Microsoft.Compute/virtualMachines",
                          "apiVersion": "2020-12-01",
                          "name": "[parameters('jumphostName')]",
                          "location": "[parameters('location')]",
                          "dependsOn": [
                            "[resourceId('Microsoft.Network/networkInterfaces', variables('jumphost_nic_name'))]"
                          ],
                          "tags": "[parameters('tags')]",
                          "properties": {
                            "hardwareProfile": {
                              "vmSize": "[parameters('JumpHostvmSize')]"
                            },
                            "storageProfile": {
                              "imageReference": {
                                "publisher": "[variables('imagePublisher')]",
                                "offer": "[variables('imageOffer')]",
                                "sku": "[parameters('JumpHostimageSku')]",
                                "version": "latest"
                              },
                              "osDisk": {
                                "osType": "Windows",
                                "name": "[concat(parameters('jumphostName'), '_OsDisk_1')]",
                                "createOption": "FromImage",
                                "caching": "ReadWrite",
                                "managedDisk": {
                                  "storageAccountType": "[variables('JumpHoststorageAccountType')]"
                                }
                              },
                              "dataDisks": []
                            },
                            "osProfile": {
                              "computerName": "[parameters('jumphostName')]",
                              "adminUsername": "[parameters('JumpHostadminUsername')]",
                              "adminPassword": "[parameters('JumpHostadminPassword')]",
                              "windowsConfiguration": {
                                "provisionVMAgent": true,
                                "enableAutomaticUpdates": true,
                                "patchSettings": {
                                  "patchMode": "AutomaticByOS"
                                }
                              }
                            },
                            "networkProfile": {
                              "networkInterfaces": [
                                {
                                  "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('jumphost_nic_name'))]"
                                }
                              ]
                            },
                            "diagnosticsProfile": {
                              "bootDiagnostics": {
                                "enabled": false
                              }
                            },
                            "licenseType": "[variables('JumpHostVmLicenseType')]"
                          }
                        },
                        {
                          "type": "Microsoft.Compute/virtualMachines/extensions",
                          "apiVersion": "2020-12-01",
                          "name": "[concat(parameters('jumphostName'), '/BGInfo')]",
                          "location": "[parameters('location')]",
                          "dependsOn": [
                            "[resourceId('Microsoft.Compute/virtualMachines', parameters('jumphostName'))]"
                          ],
                          "properties": {
                            "autoUpgradeMinorVersion": true,
                            "publisher": "Microsoft.Compute",
                            "type": "BGInfo",
                            "typeHandlerVersion": "2.1"
                          }
                        },
                        {
                          "type": "Microsoft.Compute/virtualMachines/extensions",
                          "name": "[concat(parameters('jumphostName'),'/AntiMalware')]",
                          "apiVersion": "2020-12-01",
                          "location": "[resourceGroup().location]",
                          "dependsOn": [
                            "[resourceId('Microsoft.Compute/virtualMachines', parameters('jumphostName'))]"
                          ],

                          "properties": {
                            "publisher": "Microsoft.Azure.Security",
                            "type": "IaaSAntimalware",
                            "typeHandlerVersion": "1.5",
                            "autoUpgradeMinorVersion": true,
                            "settings": {
                              "AntimalwareEnabled": true,
                              "Exclusions": {
                                "Extensions": "",
                                "Paths": "",
                                "Processes": ""
                              },
                              "RealtimeProtectionEnabled": "true",
                              "ScheduledScanSettings": {
                                "isEnabled": "true",
                                "scanType": "Quick",
                                "day": "7",
                                "time": "120"
                              }
                            }
                          }
                        },
                        {
                          "type": "Microsoft.Network/networkInterfaces",
                          "apiVersion": "2020-11-01",
                          "name": "[variables('jumphost_nic_name')]",
                          "location": "[parameters('location')]",
                          "dependsOn": [
                            "[resourceId('Microsoft.Network/publicIPAddresses', variables('jumphost_pip_name'))]",
                            "[resourceId('Microsoft.Network/networkSecurityGroups', variables('jumphost_nsg_name'))]"
                          ],
                          "properties": {
                            "ipConfigurations": [
                              {
                                "name": "ipconfig1",
                                "properties": {
                                  "privateIPAllocationMethod": "Dynamic",
                                  "publicIPAddress": {
                                    "id": "[if(parameters('JumpHostdeployPublicIp'), resourceId('Microsoft.Network/publicIPAddresses', variables('jumphost_pip_name')),json('null'))]"
                                  },
                                  "subnet": {
                                    "id": "[variables('subnetId')]"
                                  }
                                }
                              }
                            ],
                            "networkSecurityGroup": {
                              "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('jumphost_nsg_name'))]"
                            }
                          }
                        }

                    ],
                    "outputs": {}
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "JumpHostBackupDeployment",
            "resourceGroup": "[parameters('backuprgname')]",
            "dependsOn": [
                "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('JumpHostRgName'),'/providers/Microsoft.Resources/deployments/JumpHostDeployment')]"
            ],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",            
                "parameters": {
                "vmname": {
                    "value": "[parameters('jumphostName')]"
                },
                "vmrg": {
                    "value": "[parameters('JumpHostRgName')]"
                },
                "vaultName": {
                    "value": "[parameters('vaultName')]"
                },
                "policyName": {
                    "value": "[parameters('PolicyName_daily_vm')]"
                }
                },
            
                "template": {            
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "vaultName": {
                            "type": "String"
                        },
                        "policyName": {
                            "type": "String"
                        },
                        "vmname":{
                            "type": "string"
                        },
                        "vmrg":{
                            "type": "string"
                        }
                    },
                    "variables": {
                        "ProtectedItem": "[concat('vm;iaasvmcontainerv2;',parameters('vmrg'),';',parameters('vmname'))]",
                        "ProtectionContainer": "[concat('IaasVMContainer;iaasvmcontainerv2;',parameters('vmrg'),';',parameters('vmname'))]",
                        "sourceResourceId": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('vmrg'),'/providers/Microsoft.Compute/virtualMachines/',parameters('vmname'))]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers/protectedItems",
                            "apiVersion": "2016-06-01",
                            "name": "[concat(parameters('vaultName'), '/Azure/',variables('protectionContainer'), '/', variables('ProtectedItem'))]",
                            "properties": {
                                "protectedItemType": "Microsoft.ClassicCompute/virtualMachines",
                                "policyId": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('vaultName'), parameters('policyName'))]",
                                "sourceResourceId": "[variables('sourceResourceId')]"
                            }
                        }
                    ]
                }
            }
        }
    ]
}